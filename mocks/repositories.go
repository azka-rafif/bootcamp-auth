// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repositories/repositories.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockExampleRepositoryContract is a mock of ExampleContract interface
type MockExampleRepositoryContract struct {
	ctrl     *gomock.Controller
	recorder *MockExampleRepositoryContractMockRecorder
}

// MockExampleRepositoryContractMockRecorder is the mock recorder for MockExampleRepositoryContract
type MockExampleRepositoryContractMockRecorder struct {
	mock *MockExampleRepositoryContract
}

// NewMockExampleRepositoryContract creates a new mock instance
func NewMockExampleRepositoryContract(ctrl *gomock.Controller) *MockExampleRepositoryContract {
	mock := &MockExampleRepositoryContract{ctrl: ctrl}
	mock.recorder = &MockExampleRepositoryContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExampleRepositoryContract) EXPECT() *MockExampleRepositoryContractMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockExampleRepositoryContract) Get() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockExampleRepositoryContractMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockExampleRepositoryContract)(nil).Get))
}
